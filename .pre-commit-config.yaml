# Pre-commit hooks configuration
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # General file cleanup
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Remove trailing whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-toml
        name: Check TOML syntax
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=5000']
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-case-conflict
        name: Check for case conflicts
      - id: mixed-line-ending
        name: Fix mixed line endings

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: Format code with Black
        language_version: python3
        args: ['--line-length=120']

  # Python import sorting
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort imports with isort
        args: ['--profile=black', '--line-length=120']

  # Python linting
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: Lint with Flake8
        args: 
          - '--max-line-length=120'
          - '--extend-ignore=E203,E266,E501,W503'
          - '--max-complexity=15'
        additional_dependencies: 
          - flake8-docstrings
          - flake8-bugbear

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        name: Security scan with Bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: '^tests/'

  # Local hooks (fast tests)
  - repo: local
    hooks:
      - id: pytest-fast
        name: Run fast unit tests
        entry: pytest tests/unit -x --tb=short -q --maxfail=3
        language: system
        pass_filenames: false
        always_run: true
        stages: [commit]
      
      - id: pytest-changed
        name: Test changed files
        entry: bash -c 'pytest tests/ -x --tb=short -q --maxfail=5 || echo "⚠️ Tests failed - review before pushing"'
        language: system
        pass_filenames: false
        always_run: false
        stages: [push]

